demo()
demo(Japanese)
r <- 1.3
y = 4
y = 422
search()
ls
ls()
Sys.time()
unclass(Sys.time())
names(unclass(Sys.time()))
t <- Sys.time()
p <- as.POSIXlt(t)
unclass(p)
names(unclass(p))
?strptime
clc
swirl()
swirl
library(swirl)
rm(list=ls())
library(swirl)
swirl()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!(5 == 7)
FALSE & FALSE
TRUE & c(TURE, FALSE, FALSE)
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5>8 || 6!=8 && 4>3.9
isTRUE(6>4)
identical('twins','twins')
xor(5 == 6, !FALSE)
play()
identical(xor, 'xor')
nxt()
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4.5.10))
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor=11,num=5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(sd,c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, 6)
evaluate(function(x){x[1]}, c(8,4,0))
evaluate(function(x){x[length(c)]}, c(8,4,0))
evaluate(function(x){x[length(x)]}, c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("helle")
submit()
mad_libs(place='here', adjective = 'Smart', noun = 'Fadwa')
submit()
submit()
play()
"ffas" + "dsf"
paste("dgsd","DFs")
nxt()
submit()
"I" %p% "love" %p% "R!"
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01"")
d2 <- as.Date("1969-01-01")
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
as.POSIXlt(Sys.time())
t2 <- as.POSIXlt(Sys.time())
t2
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3)
t4 <- strptime(t3, "%B %d, %Y, %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
library(ggplot2)
data("diamonds")
plot(cars)
library(ggplot2)
data("diamonds")
diamonds.head()
?head
library(ggplot2)
data("diamonds")
head(diamonds)
plot(cars)
?diamonds
library(ggplot2)
data("diamonds")
head(diamonds)
#Simple scatter plot between the carat and the price
ggplot(diamonds, aes(x=carat, y=price))
+ geom_point() + ggtitle("Scatter plot") + xlab("carat (weight)")
library(ggplot2)
data("diamonds")
head(diamonds)
#Simple scatter plot between the carat and the price
ggplot(diamonds, aes(x=carat, y=price))
+ geom_point() + ggtitle("Scatter plot") + xlab("carat (weight)")
#Simple scatter plot between the carat and the price
ggplot(diamonds, aes(x=carat, y=price)) + geom_point() + ggtitle("Scatter plot") + xlab("carat (weight)")
# Add additional feature in the plot by using color, for example add clarity
ggplot(diamonds, aes(x=carat, y=price, color=clarity)) + geom_point() + ggtitle("Scatter plot") + xlab("carat (weight)")
# What about the "cut", can we add it too...Yes by the point shape :D
ggplot(diamonds, aes(x=carat, y=price, color=clarity, shape=cut)) + geom_point() + ggtitle("Scatter plot") + xlab("carat (weight)")
library(ggplot2)
data("diamonds")
head(diamonds)
ggplot(diamonds, aes(x=carat, y=price)) + geom_point() + ggtitle("Scatter plot") + xlab("carat (weight)")
# Add additional feature in the plot by using color, for example add "clarity"
ggplot(diamonds, aes(x=carat, y=price, color=clarity)) + geom_point() + ggtitle("Scatter plot") + xlab("carat (weight)")
# What about the "cut", can we add it too...Yes by the point shape :D
ggplot(diamonds, aes(x=carat, y=price, color=clarity, shape=cut)) + geom_point() + ggtitle("Scatter plot") + xlab("carat (weight)")
getwd()
setwd("./R/ReadingData/")
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(url, "data.xlsx")
date()
library(xlsx)
library(rJava)
R.version
Sys.setenv(JAVA_HOME='C:\\Program Files\\Java\\jre7') # for 64-bit version
Sys.setenv(JAVA_HOME='C:\\Program Files (x86)\\Java\\jre7') # for 32-bit version
library(rJava)
Sys.setenv(JAVA_HOME='C:\\Program Files\\Java\\jre7') # for 64-bit version
Sys.setenv(JAVA_HOME='C:\\Program Files (x86)\\Java\\jre7') # for 32-bit version
library(rJava)
Sys.setenv(JAVA_HOME='C:\\Program Files\\Java\\jre7') # for 64-bit version
library(rJava)
R.version
library(rJava)
Sys.setenv(JAVA_HOME='C:\\Program Files (x86)\\Java\\jre7') # for 32-bit version
library(rJava)
Sys.setenv(JAVA_HOME='C:\\Program Files\\Java\\jre7') # for 64-bit version
library(rJava)
